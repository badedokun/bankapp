# OrokiiPay Banking Platform - Cloud Run Optimized Dockerfile
# Serverless deployment with faster cold starts and efficient resource usage

# Use official Node.js 18 slim for smaller image size
FROM node:18-slim AS builder

# Install system dependencies for native modules
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy package files for dependency caching
COPY package*.json ./
COPY tsconfig.json ./

# Install all dependencies (including devDependencies for building)
RUN npm ci

# Copy source code
COPY . .

# Build TypeScript application
RUN npm run server:build

# Production stage - minimal image
FROM node:18-slim AS production

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Copy necessary runtime files
COPY --from=builder /app/server ./server
COPY --from=builder /app/scripts ./scripts

# Change ownership to non-root user
RUN chown -R nodejs:nodejs /app
USER nodejs

# Cloud Run uses PORT environment variable
ENV PORT=8080
ENV NODE_ENV=production

# Expose the port that Cloud Run expects
EXPOSE 8080

# Health check endpoint for Cloud Run
HEALTHCHECK --interval=10s --timeout=5s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start the application
CMD ["node", "dist/server/index.js"]