#!/bin/bash

# Pre-commit hook to prevent integration issues
# This runs before every commit to catch problems early

echo "🔍 Running pre-commit tests..."

# Check if we're in a merge
if git rev-parse --verify MERGE_HEAD > /dev/null 2>&1; then
    echo "⚠️  Merge in progress, skipping pre-commit tests"
    exit 0
fi

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$')

if [ -z "$STAGED_FILES" ]; then
    echo "✅ No relevant files staged for commit"
    exit 0
fi

echo "📁 Staged files: $STAGED_FILES"

# Run linting
echo "🧹 Running ESLint..."
npm run lint -- $STAGED_FILES
if [ $? -ne 0 ]; then
    echo "❌ ESLint failed. Please fix linting errors before committing."
    exit 1
fi

# Run frontend and integration tests for staged files
echo "🧪 Running frontend tests..."
npm run test:frontend -- --findRelatedTests $STAGED_FILES --passWithNoTests
if [ $? -ne 0 ]; then
    echo "❌ Frontend tests failed. Please fix failing tests before committing."
    exit 1
fi

echo "🔗 Running integration tests..."
npm run test:integration -- --findRelatedTests $STAGED_FILES --passWithNoTests
if [ $? -ne 0 ]; then
    echo "❌ Integration tests failed. Please fix failing tests before committing."
    exit 1
fi

# Check if any screen/component files are modified, run UX tests
SCREEN_FILES=$(echo "$STAGED_FILES" | grep -E '(screens|components).*\.(ts|tsx)$')
if [ ! -z "$SCREEN_FILES" ]; then
    echo "🎨 Running UX validation tests..."
    npm run test:ux -- --findRelatedTests $SCREEN_FILES --passWithNoTests
    if [ $? -ne 0 ]; then
        echo "❌ UX validation tests failed. Please ensure proper user experience."
        exit 1
    fi
fi

echo "✅ All pre-commit tests passed!"
exit 0